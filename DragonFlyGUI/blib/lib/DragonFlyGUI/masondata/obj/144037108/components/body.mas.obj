package HTML::Mason::Commands;
use strict;
use vars qw($m $name $c $base);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $main, $left );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 2 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
     $main = exists $pos{'main'} ? $_[ $pos{'main'} ] :  undef;;
#line 3 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
     $left = exists $pos{'left'} ? $_[ $pos{'left'} ] :  undef;;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 5 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
$m->print( '<!-- from body.mas -->
' );
#line 6 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
 use XML::Smart;
 my ($xml,$desc,$left_xml);
$m->print( '

' );
#line 10 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
 # return if (!defined($main));
$m->print( '
' );
#line 12 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
   # set up a speedometer in the main window (one for disk, one for network, one for CPU)
$m->print( ' 
' );
#line 14 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
$m->comp(   '/components/so-jgauge.mas'  
); #line 14 "/home/landman/df/DragonFlyGUI/root/components/body.mas"
$m->print( '
 
	


<p class="clear" />
<!-- end of body.mas -->
' );
;return;
},
'declared_args' => {
  '$left' => { default => ' undef;' },
  '$main' => { default => ' undef;' }
},
'load_time' => 1302387823,

)
;