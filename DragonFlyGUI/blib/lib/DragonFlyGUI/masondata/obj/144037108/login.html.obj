package HTML::Mason::Commands;
use strict;
use vars qw($m $name $c $base);
HTML::Mason::Component::FileBased->new(
'code' => sub {
HTML::Mason::Exception::Params->throw
    ( error =>
      "Odd number of parameters passed to component expecting name/value pairs"
    ) if @_ % 2;
my ( $left, $nav, $body, $error_msg, $tab );
{
    my %pos;
    for ( my $x = 0; $x < @_; $x += 2 )
    {
        $pos{ $_[$x] } = $x + 1;
    }
#line 2 "/home/landman/df/DragonFlyGUI/root/login.html"
     $left = exists $pos{'left'} ? $_[ $pos{'left'} ] :  undef;
#line 3 "/home/landman/df/DragonFlyGUI/root/login.html"
     $nav = exists $pos{'nav'} ? $_[ $pos{'nav'} ] :  undef;
#line 4 "/home/landman/df/DragonFlyGUI/root/login.html"
     $body = exists $pos{'body'} ? $_[ $pos{'body'} ] :  undef;
#line 5 "/home/landman/df/DragonFlyGUI/root/login.html"
     $error_msg = exists $pos{'error_msg'} ? $_[ $pos{'error_msg'} ] :  undef;
#line 6 "/home/landman/df/DragonFlyGUI/root/login.html"
     $tab = exists $pos{'tab'} ? $_[ $pos{'tab'} ] :  undef;
}
$m->debug_hook( $m->current_comp->path ) if ( HTML::Mason::Compiler::IN_PERL_DB() );

#line 8 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '<html>
' );
#line 9 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->comp(   '/components/style.mas'  
); #line 9 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '

<head>
' );
#line 12 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->comp(   '/components/header.mas'  
); #line 12 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '
' );
#line 13 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->comp(   '/components/tabs.mas'  
); #line 13 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '

</head>
<body>
' );
#line 17 "/home/landman/df/DragonFlyGUI/root/login.html"

use Sys::Hostname;
my $hostname	= hostname;
#
# handle case of no pre-defined tabs, emit 'default' set of login tabs
if (!$tab)
 {
  push @$tab,{
  	     label	=> "Login",
	     uri	=> "login",
	     content	=> '
<p>
 <table>
  <form method="POST" action="/login">
   <tr>
    <td><strong>Username</strong>:</td>
    <td><input type="text" name="username" size="32" /></td>
   </tr>
   <tr>
    <td><strong>Password</strong>:</td>
    <td> <input type="password" name="password" size="32" /></td>
   </tr>
   <tr>
    <td><input type="submit" value="Login" /></td>
   </tr>
  </form>
 </table>
</p>	     
	     '
	    };
	    
  push @$tab,{
  	     label	=> "Help",
	     uri	=> "help",
	     content	=> '

<p align="justify">
 For help on logins, or getting login access, please contact your systems
 administrator, or <a href="mailto:help@scalableinformatics.com?Subject=DragonFly setup help">
 send us an email</a>.
 <br />
 <br />
 For help on setting up your own DragonFly system atop an existing or new storage environment,
 please <a href="mailto:help@scalableinformatics.com?Subject=DragonFly login help">
 send us an email</a>.
 <br />
 <br />
 To report a problem with the system, please
 <a href="mailto:help@scalableinformatics.com?Subject=DragonFly problem">
 send us an email</a>.
</p>
	     '
	     };
  push @$tab,{
  	     label	=> "About",
	     uri	=> "about",
	     content	=> '
<p align="justify">
 
  DragonFly and StorM are technologies owned, developed, and marketed by 
  <A href="http://scalableinformatics.com">Scalable Informatics Inc.</a> in conjunction
  with sales of Scalable Informatics <a href="http://scalableinformatics.com/sicluster">siCluster</a> product. 
  DragonFly is a set of technologies to provide an abstracted interface to an HPC cloud or cluster, 
  and StorM is the Storage Management system built atop the DragonFly framework.
  <br /><br />
  DragonFly and StorM enable end users to easily interact with complex high performance storage and 
  computing environments.  DragonFly and its ancestors (SICE) 
  have been in active development since 2002.  StorM has been in active development since 2009.
  <br /><br />
  DragonFly and StorM  enables end users to interact with their high performance storage and computing
  environments via commonly available web browser tools, on computers, and mobile devices.
  It provides an impeadence match between complex command line environments and accessable GUI 
  environments, and allows high performance storage and computing resource owners to more 
  easily utilize and manage their systems. 
  <br /><br />
  This in turn, reduces usage and management complexity and shortens learning curves for users, 
  allowing them to become more productive users and managers of complex high performance storage
  and computing systems sooner.  DragonFly and StorM are designed specifically
  to enable easy addition of new storage systems, and rapid deployment of cluster and target storage within HPC 
  computing systems.
  <br /><br />
  Dragonfly and StorM are a <a href="/licensing">commercially licensed</a> part of <A href="http://scalableinformatics.com/sicluster">Scalable Informatics siCluster</a> system.form
  
  DragonFly and SICE are copyright &copy; 2002-2011 <a href="http://scalableinformatics.com">Scalable Informatics Inc.</a>
  Storm are  copyright &copy; 2009-2011 <a href="http://scalableinformatics.com">Scalable Informatics Inc.</a>
</p>
	     '
	     };  
 }
#line 107 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '
' );
#line 108 "/home/landman/df/DragonFlyGUI/root/login.html"
 if ($error_msg) {
$m->print( '<div align="center" class="error_msg">
 <p>' );
#line 110 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( $m->interp->apply_escapes( (join '', ( $error_msg)), 'h' ) );
#line 110 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '</p>
</div>
' );
#line 112 "/home/landman/df/DragonFlyGUI/root/login.html"
 }
$m->print( '<div align="center" >
 <br />
 <br />
</div>
' );
#line 117 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->comp(   '/components/create_tabs.mas',tab=>$tab   
); #line 117 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '

<div align="center" >
 <br />
 <br />
</div>

' );
#line 124 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->comp(   '/components/footer.mas'  
); #line 124 "/home/landman/df/DragonFlyGUI/root/login.html"
$m->print( '
</body>
</html>
' );
;return;
},
'declared_args' => {
  '$body' => { default => ' undef' },
  '$error_msg' => { default => ' undef' },
  '$left' => { default => ' undef' },
  '$nav' => { default => ' undef' },
  '$tab' => { default => ' undef' }
},
'load_time' => 1302390917,

)
;